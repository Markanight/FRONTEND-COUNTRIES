{"ast":null,"code":"const initialState = {\n  countries: [],\n  countryDetail: [],\n  allActivities: [],\n  allContinents: [],\n  population: [],\n  alphabetic: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'STORE_COUNTRIES':\n      return {\n        ...state,\n        countries: action.payload,\n        population: action.payload,\n        allContinents: action.payload\n      };\n    case 'STORE_COUNTRY_DETAIL':\n      return {\n        ...state,\n        countryDetail: action.payload\n      };\n    case 'GET_NAME_COUNTRY':\n      return {\n        ...state,\n        countries: action.payload\n      };\n    case 'GET_ALL_ACTIVITIES':\n      return {\n        ...state,\n        allActivities: action.payload\n      };\n    case 'GET_FILTER_POPULATION':\n      const population = state.population;\n      const filterMin = action.payload === 'Min' ? population.sort((a, b) => {\n        if (a.population > b.population) {\n          return 1;\n        }\n        if (b.population > a.population) {\n          return -1;\n        }\n        return 0;\n      }) : population.sort((a, b) => {\n        if (a.population > b.population) {\n          return -1;\n        }\n        if (b.population > a.population) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        countries: filterMin\n      };\n    case 'GET_FILTER_CONTINENT':\n      const allContinents = state.allContinents;\n      const filterContinent = allContinents.filter(country => country.continent === action.payload);\n      return {\n        ...state,\n        countries: filterContinent\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","countries","countryDetail","allActivities","allContinents","population","alphabetic","rootReducer","state","action","type","payload","filterMin","sort","a","b","filterContinent","filter","country","continent"],"sources":["C:/Users/Valeria/Downloads/PI-Countries-main/PI-Countries-main/client/src/reducer/index.js"],"sourcesContent":["const initialState = {\r\n    countries : [],\r\n    countryDetail : [],\r\n    allActivities : [],\r\n    allContinents: [],\r\n    population : [],\r\n    alphabetic : []\r\n\r\n\r\n}\r\n\r\n\r\nfunction rootReducer (state = initialState, action) {\r\n   switch(action.type){\r\n    case 'STORE_COUNTRIES' :\r\n        return {\r\n            ...state,\r\n            countries: action.payload,\r\n            population: action.payload,\r\n            allContinents : action.payload\r\n        }\r\n    case 'STORE_COUNTRY_DETAIL' :\r\n        return {\r\n            ...state,\r\n            countryDetail: action.payload\r\n\r\n        }\r\n    case 'GET_NAME_COUNTRY' :\r\n        return {\r\n            ...state,\r\n            countries: action.payload\r\n        }\r\n\r\n    case 'GET_ALL_ACTIVITIES' :\r\n        return {\r\n            ...state,\r\n            allActivities : action.payload\r\n        }\r\n\r\n    case 'GET_FILTER_POPULATION' :\r\n        const population = state.population\r\n        const filterMin = action.payload === 'Min' ?\r\n        population.sort((a, b)=>{\r\n            if(a.population > b.population){\r\n               return  1\r\n            }\r\n            if (b.population > a.population){\r\n                return -1\r\n            }\r\n            return 0\r\n        }) : \r\n        population.sort((a, b)=>{\r\n            if(a.population > b.population){\r\n               return  -1\r\n            }\r\n            if (b.population > a.population){\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n        return {\r\n            ...state,\r\n            countries : filterMin\r\n        }\r\n\r\n    case 'GET_FILTER_CONTINENT' :\r\n        const allContinents = state.allContinents\r\n        const filterContinent = allContinents.filter((country) => country.continent === action.payload)\r\n        return {\r\n            ...state,\r\n            countries : filterContinent\r\n        }\r\n\r\n    default :\r\n    return state\r\n   }\r\n}\r\nexport default rootReducer"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,SAAS,EAAG,EAAE;EACdC,aAAa,EAAG,EAAE;EAClBC,aAAa,EAAG,EAAE;EAClBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAG,EAAE;EACfC,UAAU,EAAG;AAGjB,CAAC;AAGD,SAASC,WAAW,GAAgC;EAAA,IAA9BC,KAAK,uEAAGR,YAAY;EAAA,IAAES,MAAM;EAC/C,QAAOA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MAClB,OAAO;QACH,GAAGF,KAAK;QACRP,SAAS,EAAEQ,MAAM,CAACE,OAAO;QACzBN,UAAU,EAAEI,MAAM,CAACE,OAAO;QAC1BP,aAAa,EAAGK,MAAM,CAACE;MAC3B,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACH,GAAGH,KAAK;QACRN,aAAa,EAAEO,MAAM,CAACE;MAE1B,CAAC;IACL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGH,KAAK;QACRP,SAAS,EAAEQ,MAAM,CAACE;MACtB,CAAC;IAEL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGH,KAAK;QACRL,aAAa,EAAGM,MAAM,CAACE;MAC3B,CAAC;IAEL,KAAK,uBAAuB;MACxB,MAAMN,UAAU,GAAGG,KAAK,CAACH,UAAU;MACnC,MAAMO,SAAS,GAAGH,MAAM,CAACE,OAAO,KAAK,KAAK,GAC1CN,UAAU,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAG;QACpB,IAAGD,CAAC,CAACT,UAAU,GAAGU,CAAC,CAACV,UAAU,EAAC;UAC5B,OAAQ,CAAC;QACZ;QACA,IAAIU,CAAC,CAACV,UAAU,GAAGS,CAAC,CAACT,UAAU,EAAC;UAC5B,OAAO,CAAC,CAAC;QACb;QACA,OAAO,CAAC;MACZ,CAAC,CAAC,GACFA,UAAU,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAG;QACpB,IAAGD,CAAC,CAACT,UAAU,GAAGU,CAAC,CAACV,UAAU,EAAC;UAC5B,OAAQ,CAAC,CAAC;QACb;QACA,IAAIU,CAAC,CAACV,UAAU,GAAGS,CAAC,CAACT,UAAU,EAAC;UAC5B,OAAO,CAAC;QACZ;QACA,OAAO,CAAC;MACZ,CAAC,CAAC;MACF,OAAO;QACH,GAAGG,KAAK;QACRP,SAAS,EAAGW;MAChB,CAAC;IAEL,KAAK,sBAAsB;MACvB,MAAMR,aAAa,GAAGI,KAAK,CAACJ,aAAa;MACzC,MAAMY,eAAe,GAAGZ,aAAa,CAACa,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,SAAS,KAAKV,MAAM,CAACE,OAAO,CAAC;MAC/F,OAAO;QACH,GAAGH,KAAK;QACRP,SAAS,EAAGe;MAChB,CAAC;IAEL;MACA,OAAOR,KAAK;EAAA;AAEhB;AACA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}